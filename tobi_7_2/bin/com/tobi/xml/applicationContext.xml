<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- @transaction 붙은 타입과 메소드의 트랜젝션 부가기능을 담은 프록시를 추가하는 후처리기 -->
	<tx:annotation-driven />
	
	<!-- 코드의 어노테이션을 이용해서 부가적인 빈설정, 초기화 작업을 해주는 후처리기 등록 -->
	<context:annotation-config />
	
	<bean id="userService" class="com.tobi.user.service.UserServiceImpl">
		<property name="userDao" ref="UserDao" />
		<!-- <property name="mailSender" ref="mailSender" /> -->
	</bean>
	
	<bean id="testUserService" class="com.tobi.user.test.UserServiceTest$TestUserService" parent="userService" /> 

 	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<!-- <tx:method name="upgrade*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE" /> -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<!-- <aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImpl.upgrade*(..))" /> -->
		<aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)" />
	</aop:config>
	
 	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	
	<!-- <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" ref="mail.server.com" />
	</bean> -->

<!--  	<bean id="UserDao" class="com.tobi.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
		<property name="sqlMap">
			<map>
				<entry key="add" value="insert into TB_TOBI_USER (id, name, password, level, login, recommend) values (?, ?, ?, ?, ?, ?)" />
				<entry key="get" value="select * from TB_TOBI_USER where id = ?" />
				<entry key="getAll" value="select * from TB_TOBI_USER order by id" />
				<entry key="deleteAll" value="delete from TB_TOBI_USER" />
				<entry key="getCount" value="select count(*) from TB_TOBI_USER" />
				<entry key="update" value="update TB_TOBI_USER set name=?, password=?, level=?, login=?, recommend=? where id=?" />
			</map>
		</property>
	</bean> -->
	
 	<bean id="UserDao" class="com.tobi.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
		<property name="sqlService" ref="sqlService" />
	</bean>
	
	
<!-- 	<bean id="sqlService" class="com.framework.sql.service.SimpleSqlService">
		<property name="sqlMap">
			<map>
				<entry key="userAdd" value="insert into TB_TOBI_USER (id, name, password, level, login, recommend) values (?, ?, ?, ?, ?, ?)" />
				<entry key="userGet" value="select * from TB_TOBI_USER where id = ?" />
				<entry key="userGetAll" value="select * from TB_TOBI_USER order by id" />
				<entry key="userDeleteAll" value="delete from TB_TOBI_USER" />
				<entry key="userGetCount" value="select count(*) from TB_TOBI_USER" />
				<entry key="userUpdate" value="update TB_TOBI_USER set name=?, password=?, level=?, login=?, recommend=? where id=?" />
			</map>
		</property>
	</bean> -->
	
<!-- 	<bean id="sqlService" class="com.framework.sql.service.XmlSqlService" >
		<property name="sqlReader" value="sqlReader" />
		<property name="sqlRegistry" value="sqlRegistry" />
		<property name="sqlmapFile" value="sqlmap.xml" />
	</bean> -->
	
<!-- 	<bean id="sqlService" class="com.framework.sql.service.BaseSqlService" >
		<property name="sqlReader" ref="sqlReader" /> xml 을 읽음.
		<property name="sqlRegistry" ref="sqlRegistry" /> 
	</bean>
	
	<bean id="sqlReader" class="com.framework.sql.service.JaxbXmlSqlReader" >
		<property name="sqlmapFile" value="sqlmap.xml" />
	</bean>
	
	<bean id="sqlRegistry" class="com.framework.sql.service.HashMapSqlRegistry" /> -->
	
	<bean id="sqlService" class="com.framework.sql.service.DefaultSqlService" >
	</bean>
	
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="org.mariadb.jdbc.Driver"></property>
		<property name="url" value="jdbc:mariadb://61.252.235.153:18081/seonhoblog?useUnicode=true&amp;characterEncoding=utf8"></property>
		<property name="username" value="test"></property>
		<property name="password" value="1234"></property>
	</bean>
	

	
	
</beans>


